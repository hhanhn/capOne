{"version":3,"sources":["components/ParkList.js","App.js","serviceWorker.js","index.js"],"names":["ParkList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","mounted","state","error","parkCodes","items","chosenState","nameQuery","isLoaded","vc","cg","alerts","events","news","lessons","people","_this2","url","axios","get","then","res","setState","data","getInformation","_this3","len","total","urls","temp","i","parkCode","push","j","length","Promise","all","_ref","_ref2","slicedToArray","info","console","log","latLong","name","visitorCenter","campground","title","sitecode","parks","display","extractAll","react_default","a","createElement","className","onClick","newSearch","map","par","index","key","src","alt","reactjs_popup_es","trigger","modal","closeOnDocumentClick","Fragment","Component","App","states","handleSubmit","event","preventDefault","isSearched","handleNameChange","_this$setState","defineProperty","target","id","value","handleStateChange","_this$setState2","bind","assertThisInitialized","someValue","listOfParks","components_ParkList","style-prop-object","onSubmit","htmlFor","type","placeholder","onChange","st","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oTAsNeA,cAjNX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAFVQ,SAAU,EAGNP,EAAKQ,MAAQ,CACTC,OAAO,EACPC,UAAW,GACXC,MAAO,GACPC,YAAYZ,EAAKD,MAAMa,YACvBC,UAAWb,EAAKD,MAAMc,UACtBC,UAAU,EACVC,GAAI,GACJC,GAAI,GACJC,OAAO,GACPC,OAAO,GACPC,KAAK,GACLC,QAAQ,GACRC,OAAO,IAfGrB,mFAkBE,IAAAsB,EAAAnB,KAEhBA,KAAKI,SAAU,EACf,IAAIgB,EAAM,4CAA8CpB,KAAKK,MAAMK,UAAY,cAAcV,KAAKK,MAAMI,YAAY,oDACpHY,IAAMC,IAAIF,GACTG,KAAK,SAAAC,GACCL,EAAKf,UACJe,EAAKM,SAAS,CAACjB,MAAMgB,EAAIE,OACzBP,EAAKQ,6DAMD,IAAAC,EAAA5B,KACN6B,EAAM7B,KAAKK,MAAMG,MAAMsB,MAC7B,GAAG9B,KAAKK,MAAMG,MAAMsB,MAAQ,EAAE,CAW1B,IATA,IAAIC,EAAO,CAAC,4DACZ,yDACA,oDACA,oDACA,0DACA,yDACA,qDAEIC,EAAO,GACHC,EAAI,EAAGA,EAAIjC,KAAKK,MAAMG,MAAMsB,MAAOG,IAAI,CAE3C,IAAIC,EAAWlC,KAAKK,MAAMG,MAAMkB,KAAKO,GAAGC,SACxCF,EAAKG,KAAKD,GAEV,IAAI,IAAIE,EAAI,EAAGA,EAAIL,EAAKM,OAAQD,IAC5BL,EAAKK,IAAMF,EAEPH,EAAKK,IADNH,EAAE,EAAGJ,EACO,MAGA,oDAKvB7B,KAAKyB,SAAS,CAAClB,UAAUyB,IAEzBM,QAAQC,IAAI,CACRlB,IAAMC,IAAIS,EAAK,IACfV,IAAMC,IAAIS,EAAK,IACfV,IAAMC,IAAIS,EAAK,IACfV,IAAMC,IAAIS,EAAK,IACfV,IAAMC,IAAIS,EAAK,IACfV,IAAMC,IAAIS,EAAK,IACfV,IAAMC,IAAIS,EAAK,MAElBR,KAAK,SAAAiB,GAA+C,IAAAC,EAAA3C,OAAA4C,EAAA,EAAA5C,CAAA0C,EAAA,GAA7C5B,EAA6C6B,EAAA,GAA1C5B,EAA0C4B,EAAA,GAAvC3B,EAAuC2B,EAAA,GAAhC1B,EAAgC0B,EAAA,GAAzBzB,EAAyByB,EAAA,GAApBxB,EAAoBwB,EAAA,GAAZvB,EAAYuB,EAAA,GAEjDb,EAAKH,SAAS,CACVb,GAAGA,EAAGc,KAAKA,KACXb,GAAGA,EAAGa,KAAKA,KACXZ,OAAOA,EAAOY,KAAKA,KACnBX,OAAOA,EAAOW,KAAKA,KACnBV,KAAKA,EAAKU,KAAKA,KACfT,QAAQA,EAAQS,KAAKA,KACrBR,OAAOA,EAAOQ,KAAKA,KACnBf,UAAS,4CAOrB,IAAIJ,EAAYP,KAAKK,MAAME,UACvBoC,EAAO,GACXC,QAAQC,IAAI7C,KAAKK,MAAMa,QACvB,IAAI,IAAIe,EAAI,EAAGA,EAAI1B,EAAU8B,OAAQJ,IAAI,CACrCU,EAAKR,KAAK,CAACD,SAAU3B,EAAU0B,KAC/BU,EAAKV,GAAGa,QAAU,MAClBH,EAAKV,GAAGc,KAAO,GACfJ,EAAKV,GAAGe,cAAe,MACvBL,EAAKV,GAAGgB,WAAY,MACpBN,EAAKV,GAAGnB,OAAS,MACjB6B,EAAKV,GAAGlB,OAAU,MAClB4B,EAAKV,GAAGjB,KAAO,MACf2B,EAAKV,GAAGhB,QAAW,MACnB0B,EAAKV,GAAGf,OAAS,MAEjB,IAAI,IAAIkB,EAAI,EAAGA,EAAIpC,KAAKK,MAAMG,MAAMsB,MAAOM,IACvC,GAAGpC,KAAKK,MAAMG,MAAMkB,KAAKU,GAAGF,WAAaS,EAAKV,GAAGC,SAAS,CACtDS,EAAKV,GAAGa,QAAU9C,KAAKK,MAAMG,MAAMkB,KAAKU,GAAGU,QAC3CH,EAAKV,GAAGc,KAAO/C,KAAKK,MAAMG,MAAMkB,KAAKU,GAAGW,KACxC,MAIR,IAAI,IAAIX,EAAI,EAAGA,EAAIpC,KAAKK,MAAMO,GAAGyB,OAAQD,IACrC,GAAGpC,KAAKK,MAAMO,GAAGwB,GAAGF,WAAaS,EAAKV,GAAGC,SAAS,CAC9CS,EAAKV,GAAGe,cAAgBhD,KAAKK,MAAMO,GAAGwB,GAAGW,KACzC,MAIR,IAAI,IAAIX,EAAI,EAAGA,EAAIpC,KAAKK,MAAMQ,GAAGwB,OAAQD,IACrC,GAAGpC,KAAKK,MAAMQ,GAAGuB,GAAGF,WAAaS,EAAKV,GAAGC,SAAS,CAC9CS,EAAKV,GAAGgB,WAAajD,KAAKK,MAAMQ,GAAGuB,GAAGW,KACtC,MAIR,IAAI,IAAIX,EAAI,EAAGA,EAAIpC,KAAKK,MAAMS,OAAOuB,OAAQD,IACzC,GAAGpC,KAAKK,MAAMS,OAAOsB,GAAGF,WAAaS,EAAKV,GAAGC,SAAS,CAClDS,EAAKV,GAAGnB,OAASd,KAAKK,MAAMS,OAAOsB,GAAGc,MACtC,MAIR,IAAI,IAAId,EAAI,EAAGA,EAAIpC,KAAKK,MAAMU,OAAOsB,OAAQD,IACzC,GAAGpC,KAAKK,MAAMU,OAAOqB,GAAGe,WAAaR,EAAKV,GAAGC,SAAS,CAClDS,EAAKV,GAAGlB,OAASf,KAAKK,MAAMU,OAAOqB,GAAGc,MACtC,MAIR,IAAI,IAAId,EAAI,EAAGA,EAAIpC,KAAKK,MAAMW,KAAKqB,OAAQD,IACvC,GAAGpC,KAAKK,MAAMW,KAAKoB,GAAGF,WAAaS,EAAKV,GAAGC,SAAS,CAChDS,EAAKV,GAAGjB,KAAOhB,KAAKK,MAAMW,KAAKoB,GAAGc,MAClC,MAIR,IAAI,IAAId,EAAI,EAAGA,EAAIpC,KAAKK,MAAMY,QAAQoB,OAAQD,IAC1C,GAAGpC,KAAKK,MAAMY,QAAQmB,GAAGgB,MAAM,KAAOT,EAAKV,GAAGC,SAAS,CACnDS,EAAKV,GAAGhB,QAAUjB,KAAKK,MAAMY,QAAQmB,GAAGc,MACxC,MAIR,IAAI,IAAId,EAAI,EAAGA,EAAIpC,KAAKK,MAAMa,OAAOmB,OAAQD,IACzC,GAAGpC,KAAKK,MAAMa,OAAOkB,GAAGF,WAAaS,EAAKV,GAAGC,SAAS,CAClDS,EAAKV,GAAGf,OAASlB,KAAKK,MAAMa,OAAOkB,GAAGc,MACtC,OAIZ,OAAOP,mCAGP,IAAIU,EAEJ,GAAGrD,KAAKK,MAAMM,SAAWX,KAAKK,MAAMG,MAAMsB,MAAQ,EAAE,CAChD,IAAIa,EAAO3C,KAAKsD,aAChBV,QAAQC,IAAIF,GAEZU,EAASE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,UAAQC,UAAW,kBAAkBC,QAAW3D,KAAKJ,MAAMgE,WAA3D,cACpCjB,EAAKkB,IAAI,SAACC,EAAIC,GAAL,OACVR,EAAAC,EAAAC,cAAA,OAAKO,IAAMD,EAAML,UAAU,oBAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeO,IAAI,mKAAmKC,IAAI,aACzMX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAGfH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAOC,QAASb,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUI,EAAIf,MAAgBsB,OAAK,EAACC,sBAAoB,GAE1Ff,EAAAC,EAAAC,cAAA,UAAKK,EAAIf,MACTQ,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,iCAAH,IAAqCK,EAAId,eACzCO,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,cAASK,EAAIhB,SAAhB,KACAS,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sCAAsCK,EAAIb,YAC7CM,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,0BAA0BK,EAAIhD,QACjCyC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,0BAA0BK,EAAI/C,QACjCwC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,wBAAwBK,EAAI9C,MAC/BuC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,gCAAgCK,EAAI7C,SACvCsC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,mCAAmCK,EAAI5C,QAC1CqC,EAAAC,EAAAC,cAAA,gBAAOF,EAAAC,EAAAC,cAAA,gDAUPJ,EAJMrD,KAAKK,MAAMM,SAIP4C,EAAAC,EAAAC,cAAA,wBAHAF,EAAAC,EAAAC,cAAA,MAAIC,UAAY,WAAhB,gBAKd,OACIH,EAAAC,EAAAC,cAACF,EAAAC,EAAMe,SAAP,KACKlB,UA5MMmB,aCwFRC,cAtFb,SAAAA,EAAY7E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyE,IACjB5E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2E,GAAAtE,KAAAH,KAAMJ,KAOR8E,OAAS,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KACrI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MATnG7E,EAUnB8E,aAAe,SAACC,GACdA,EAAMC,iBACNhF,EAAK4B,SAAS,CACZqD,YAAY,KAbGjF,EAiBnBkF,iBAAmB,SAACH,GAAS,IAAAI,EAC3BJ,EAAMC,iBACNhF,EAAK4B,UAALuD,EAAA,GAAAlF,OAAAmF,EAAA,EAAAnF,CAAAkF,EACGJ,EAAMM,OAAOC,GAAKP,EAAMM,OAAOE,OADlCtF,OAAAmF,EAAA,EAAAnF,CAAAkF,EAAA,cAEa,GAFbA,KAnBiBnF,EAyBnBwF,kBAAoB,SAACT,GAAS,IAAAU,EAC5BV,EAAMC,iBACNhF,EAAK4B,UAAL6D,EAAA,GAAAxF,OAAAmF,EAAA,EAAAnF,CAAAwF,EACGV,EAAMM,OAAOC,GAAKP,EAAMM,OAAOE,OADlCtF,OAAAmF,EAAA,EAAAnF,CAAAwF,EAAA,cAEa,GAFbA,KAzBAzF,EAAKQ,MAAQ,CAACK,UAAW,KACzBD,YAAa,KACbqE,YAAY,GAEZjF,EAAK+D,UAAY/D,EAAK+D,UAAU2B,KAAfzF,OAAA0F,EAAA,EAAA1F,CAAAD,IANAA,yEAiCT4F,GACRzF,KAAKyB,SAAS,CACZqD,YAAY,qCAKd,IACIY,EAOJ,OALEA,EAHe1F,KAAKK,MAAMyE,WAGZvB,EAAAC,EAAAC,cAACkC,EAAD,CAAUjF,UAAaV,KAAKK,MAAMK,UAAWD,YAAeT,KAAKK,MAAMI,YAAamD,UAAa5D,KAAK4D,YAGtG,KAGdL,EAAAC,EAAAC,cAACF,EAAAC,EAAMe,SAAP,KAGKvE,KAAKK,MAAMyE,WAwBd,KAvBAvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBkC,oBAAkB,kMAEpDrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8FAEfH,EAAAC,EAAAC,cAAA,QAAMC,UAAY,OAAOmC,SAAY7F,KAAK2E,cAC1CpB,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,+BACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOqC,QAAQ,WACfvC,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,OAAOrC,UAAU,eAAeyB,GAAG,YAAYa,YAAY,yBAAyBC,SAAUjG,KAAK+E,oBAEjHxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOqC,QAAQ,WAAf,IAA0BvC,EAAAC,EAAAC,cAAA,6BAA1B,KAEAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeyB,GAAG,cAAcc,SAAUjG,KAAKqF,mBAC9DrF,KAAK0E,OAAOb,IAAI,SAAAqC,GAAE,OAAI3C,EAAAC,EAAAC,cAAA,UAAQO,IAAMkC,GAAKA,OAI9C3C,EAAAC,EAAAC,cAAA,UAAQC,UAAW,iCAAnB,aAQDgC,UAlFSlB,aCSE2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECZNC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxF,KAAK,SAAAyF,GACjCA,EAAaC","file":"static/js/main.3458b504.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Popup from \"reactjs-popup\";\nclass ParkList extends Component {\n    mounted = false;\n    constructor(props){\n        super(props);\n        this.state = {\n            error: false,\n            parkCodes: [],\n            items: [],\n            chosenState:this.props.chosenState,\n            nameQuery: this.props.nameQuery,\n            isLoaded: false,\n            vc: [],\n            cg: [],\n            alerts:[],\n            events:[],\n            news:[],\n            lessons:[],\n            people:[]\n        };\n    }\n    componentDidMount() {\n        // Obtain the initial states query\n        this.mounted = true;\n        let url = 'https://developer.nps.gov/api/v1/parks?q=' + this.state.nameQuery + '&stateCode='+this.state.chosenState+'&api_key=mxhnif0llUeKpr38jW6UbEdpbCEG0z0ntWjMQ1Ad'\n        axios.get(url)\n        .then(res => {\n            if(this.mounted){\n                this.setState({items:res.data})\n                this.getInformation();\n            }\n\n        })\n    }\n\n    getInformation(){\n        const len = this.state.items.total;\n        if(this.state.items.total > 0){\n            // The list of the urls that will be used for all the information\n            let urls = ['https://developer.nps.gov/api/v1/visitorcenters?parkCode=',\n            'https://developer.nps.gov/api/v1/campgrounds?parkCode=',\n            'https://developer.nps.gov/api/v1/alerts?parkCode=',\n            'https://developer.nps.gov/api/v1/events?parkCode=',\n            'https://developer.nps.gov/api/v1/newsreleases?parkCode=',\n            'https://developer.nps.gov/api/v1/lessonplans?parkCode=',\n            'https://developer.nps.gov/api/v1/people?parkCode='\n            ]\n            let temp = []\n            for(let i = 0; i < this.state.items.total; i++){\n                // Obtain parkCode\n                let parkCode = this.state.items.data[i].parkCode;\n                temp.push(parkCode);\n                // Add to urls\n                for(let j = 0; j < urls.length; j++){\n                    urls[j] += parkCode;\n                    if(i+1 <len){\n                        urls[j] += '%2C';\n                    }\n                    else{\n                        urls[j] += '&api_key=mxhnif0llUeKpr38jW6UbEdpbCEG0z0ntWjMQ1Ad';\n                    }\n                }\n                \n            }\n            this.setState({parkCodes:temp})\n            // get all the information in parallel\n            Promise.all([\n                axios.get(urls[0]),\n                axios.get(urls[1]),\n                axios.get(urls[2]),\n                axios.get(urls[3]),\n                axios.get(urls[4]),\n                axios.get(urls[5]),\n                axios.get(urls[6]),\n            ])\n            .then(([vc,cg,alerts,events,news,lessons,people]) => {\n                // Set the states of all the information\n                this.setState({\n                    vc:vc.data.data,\n                    cg:cg.data.data,\n                    alerts:alerts.data.data,\n                    events:events.data.data,\n                    news:news.data.data,\n                    lessons:lessons.data.data,\n                    people:people.data.data,\n                    isLoaded:true})\n            });\n        }\n        \n    }\n    // compile all of the park information into a single park\n    extractAll(){\n        let parkCodes = this.state.parkCodes;\n        let info = [];\n        console.log(this.state.people)\n        for(let i = 0; i < parkCodes.length; i++){\n            info.push({parkCode: parkCodes[i]});\n            info[i].latLong = 'n/a'\n            info[i].name = '';\n            info[i].visitorCenter= 'n/a';\n            info[i].campground= 'n/a';\n            info[i].alerts = 'n/a';\n            info[i].events =  'n/a';\n            info[i].news = 'n/a';\n            info[i].lessons =  'n/a';\n            info[i].people = 'n/a';\n            // Obtain Names, latitude and longitude\n            for(let j = 0; j < this.state.items.total; j++){\n                if(this.state.items.data[j].parkCode === info[i].parkCode){\n                    info[i].latLong = this.state.items.data[j].latLong;\n                    info[i].name = this.state.items.data[j].name;\n                    break;\n                }\n            }\n            // Obtain Visitor Centers\n            for(let j = 0; j < this.state.vc.length; j++){\n                if(this.state.vc[j].parkCode === info[i].parkCode){\n                    info[i].visitorCenter = this.state.vc[j].name;\n                    break;\n                }\n            }\n            // Obtain campgrounds\n            for(let j = 0; j < this.state.cg.length; j++){\n                if(this.state.cg[j].parkCode === info[i].parkCode){\n                    info[i].campground = this.state.cg[j].name;\n                    break;\n                }\n            }\n            // Obtain alerts\n            for(let j = 0; j < this.state.alerts.length; j++){\n                if(this.state.alerts[j].parkCode === info[i].parkCode){\n                    info[i].alerts = this.state.alerts[j].title;\n                    break;\n                }\n            }\n            // Obtain events\n            for(let j = 0; j < this.state.events.length; j++){\n                if(this.state.events[j].sitecode === info[i].parkCode){\n                    info[i].events = this.state.events[j].title;\n                    break;\n                }\n            }\n            // Obtain news\n            for(let j = 0; j < this.state.news.length; j++){\n                if(this.state.news[j].parkCode === info[i].parkCode){\n                    info[i].news = this.state.news[j].title;\n                    break;\n                }\n            }\n            // Obtain lessons\n            for(let j = 0; j < this.state.lessons.length; j++){\n                if(this.state.lessons[j].parks[0] === info[i].parkCode){\n                    info[i].lessons = this.state.lessons[j].title;\n                    break;\n                }\n            }\n            // Obtain people\n            for(let j = 0; j < this.state.people.length; j++){\n                if(this.state.people[j].parkCode === info[i].parkCode){\n                    info[i].people = this.state.people[j].title;\n                    break;\n                }\n            }\n        }\n        return info;\n    }\n    render(){\n        let display;\n        // Display the list of parks if once the queue is specified\n        if(this.state.isLoaded & this.state.items.total > 0){\n            let info = this.extractAll()\n            console.log(info)\n            // display the parks\n            display =<div className=\"d-flex p-2\"><button className= \"btn btn-primary\" onClick = {this.props.newSearch}>New Search</button>\n            {info.map((par,index) => \n            <div key ={index}className=\"card text-center\" >\n            <img className=\"card-img-top\" src=\"https://us.123rf.com/450wm/yupiramos/yupiramos1804/yupiramos180403918/98744014-stock-vector-mountains-and-lake-nature-scene-vector-illustration-design.jpg?ver=6\" alt=\"Card cap\"/>\n            <div className=\"card-body\">\n\n            {/* Popup that includes the information */}\n            <Popup trigger={<button className=\"button\">{par.name}</button>} modal closeOnDocumentClick>\n            {/* Display more detailed information */}\n            <h2>{par.name}</h2>\n            <p><strong>Visitor Center:</strong> {par.visitorCenter}</p>\n            <p><strong>{par.latLong}</strong> </p>\n            <p><strong>Nearest Campground: </strong>{par.campground}</p>\n            <p><strong>Alerts: </strong>{par.alerts}</p>\n            <p><strong>Events: </strong>{par.events}</p>\n            <p><strong>News: </strong>{par.news}</p>\n            <p><strong>Lesson Plans: </strong>{par.lessons}</p>\n            <p><strong>Relevant People: </strong>{par.people}</p>\n            <span> <em>Click Outside to Close</em></span>\n            </Popup>\n            </div>\n            </div>)}\n            </div>\n        }\n        else if (!this.state.isLoaded){\n            display = <h1 className = \"loading\">Loading.....</h1>\n        }\n        else{\n            display = <h1>None found</h1>\n        }\n        return (\n            <React.Fragment>\n                {display}\n            </React.Fragment>\n            \n        )\n    }\n}\n\nexport default ParkList;","import React, {Component} from 'react';\nimport './App.css';\nimport ParkList from './components/ParkList.js';\nclass App extends Component {\n  // nameQuery is the search name, chosen state is the park\n  constructor(props) {\n    super(props);\n    this.state = {nameQuery: null,\n    chosenState: 'AL',\n    isSearched: false\n    };\n    this.newSearch = this.newSearch.bind(this)\n  }\n  states = ['AL','AK','AZ','AR','CA','CO','CT','DE','FL','GA','HI','ID','IL','IN','IA','KS','KY','LA','ME','MD','MA','MI','MN','MS','MO','MT',\n    'NE','NV','NH','NJ','NM','NY','NC','ND','OH','OK','LOR','PA','RI','SC','SD','TN','TX','UT','VT','VA','WA','WV','WI','WY'];\n  handleSubmit = (event) =>{\n    event.preventDefault();\n    this.setState({\n      isSearched: true\n    })\n  }\n  // Set the new search query of the park name\n  handleNameChange = (event) =>{\n    event.preventDefault();\n    this.setState({\n      [event.target.id]: event.target.value,\n      isSearched:false\n    })\n  }\n  // Set the new state name\n  handleStateChange = (event) =>{\n    event.preventDefault();\n    this.setState({\n      [event.target.id]: event.target.value,\n      isSearched:false\n    })\n  }\n  // to search again\n  newSearch(someValue) {\n    this.setState({\n      isSearched: false\n    })\n  }\n  render(){\n    // if the search button is clicked, go ahead and render the list of parks\n    let isSearched = this.state.isSearched;\n    let listOfParks;\n    if(isSearched){\n      listOfParks = <ParkList nameQuery = {this.state.nameQuery} chosenState = {this.state.chosenState} newSearch = {this.newSearch}/>\n    }\n    else{\n      listOfParks = null;\n    }\n    return (\n      <React.Fragment>\n        {/* Search bar */}\n        {\n          !this.state.isSearched?\n        <div className=\"container-fluid \" style-prop-object=\"height:100vh; background-size: cover; background-image: url(https://www.naturalworldsafaris.com/~/media/images/wildlife/african-elephant/kenya-wildlife-elephant-copyright-will-bolsover.jpg);\" >\n        \n        <div className=\"row justify-content-center align-items-center d-flex text-center h-100 mt-5 mb-5 b-primary\" >\n        {/* Form for the search query */}\n        <form className = \"mr-1\" onSubmit = {this.handleSubmit}>\n        <h1>National Park Service</h1>\n        <h3>Search for a Park</h3>\n          <div className=\"form-group \">\n            <label htmlFor=\"nameID\"></label>\n            <input type=\"text\" className=\"form-control\" id=\"nameQuery\" placeholder=\"Ex: Zion National Park\" onChange={this.handleNameChange}/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"stateID\"> <em>in which state?</em> </label>\n            {/* List all of the states */}\n            <select className=\"form-control\" id=\"chosenState\" onChange={this.handleStateChange}>\n              {this.states.map(st => <option key= {st}>{st}</option>)}\n            </select>\n          </div>\n          {/* Button triggers handleSearch() */}\n          <button className= \"btn btn-secondary bg-warning \">Submit</button>\n        </form>\n        </div>\n        </div>:\n        null\n        // <button className= \"btn btn-secondary bg-warning \" onClick = {this.setState({isSearched:false})}>Submit</button>\n        }\n        {/* Insert list of parks here upon searching */}\n        {listOfParks}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css'\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}